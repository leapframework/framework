<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.leapframework.org/schema/beans" if-servlet-environment="true">
    <bean type="leap.web.api.Apis"
          class="leap.web.api.DefaultApis" primary="true"/>

    <bean type="leap.web.api.meta.ApiMetadataFactory"
          class="leap.web.api.meta.DefaultApiMetadataFactory" primary="true"/>

    <bean type="leap.web.api.meta.ApiMetadataStrategy"
          class="leap.web.api.meta.DefaultApiMetadataStrategy" primary="true"/>

    <bean name="swagger"
          type="leap.web.api.spec.ApiSpecWriter"
          class="leap.web.api.spec.swagger.SwaggerJsonWriter" primary="true"/>

    <bean name="swagger"
          type="leap.web.api.spec.ApiSpecReader"
          class="leap.web.api.spec.swagger.SwaggerSpecReader" primary="true"/>

    <!-- model -->
    <bean type="leap.web.api.orm.ModelExecutorFactory" class="leap.web.api.orm.DefaultModelExecutorFactory" primary="true"/>

    <bean type="leap.web.api.orm.ModelExecutorHelper" class="leap.web.api.orm.DefaultModelExecutorHelper" primary="true"/>

    <beans if-class-present="leap.web.security.SecurityConfig">
        <bean type="leap.web.api.config.ApiConfigProcessor" class="leap.web.api.security.SecurityConfigProcessor"/>
    </beans>

    <beans if-class-present="leap.oauth2.webapp.OAuth2Config">
        <bean type="leap.web.api.config.ApiConfigProcessor" class="leap.web.api.security.OAuth2ConfigProcessor"/>
    </beans>

    <!-- doc -->
    <bean type="leap.web.api.meta.ApiMetadataProcessor" class="leap.web.api.doc.AnnotationDocProcessor"/>
    <bean type="leap.web.api.meta.ApiMetadataProcessor" class="leap.web.api.doc.ConfigDocProcessor">
        <property name="conventionalProcessor">
            <bean class="leap.web.api.doc.ConventionalDocProcessor"/>
        </property>
    </bean>

    <!-- built-in swagger processor -->
    <bean type="leap.web.api.config.ApiConfigProcessor" class="leap.web.api.spec.swagger.SwaggerProcessor">
        <additional-type-def type="leap.web.api.meta.ApiMetadataProcessor"/>
    </bean>
    <bean type="leap.web.api.mvc.ApiFailureHandler"
          class="leap.web.api.mvc.DefaultApiFailureHandler" primary="true"/>

    <bean type="leap.web.api.mvc.ApiErrorHandler"
          class="leap.web.api.mvc.DefaultApiErrorHandler" primary="true"/>

    <!-- restd -->
    <bean type="leap.web.api.restd.RestdStrategy"       class="leap.web.api.restd.DefaultRestdStrategy" primary="true"/>
    <bean type="leap.web.api.config.ApiConfigProcessor" class="leap.web.api.restd.RestdApiConfigProcessor">
        <additional-type-def type="leap.web.api.meta.ApiMetadataProcessor"/>
    </bean>

    <bean type="leap.web.api.restd.RestdProcessor" class="leap.web.api.restd.CrudOperationProcessor"/>
    <bean type="leap.web.api.restd.RestdProcessor" class="leap.web.api.restd.ProviderOperationProcessor"/>

    <!--crud -->
    <bean name="create" type="leap.web.api.restd.CrudOperation" class="leap.web.api.restd.crud.CreateOperation"/>
    <bean name="update" type="leap.web.api.restd.CrudOperation" class="leap.web.api.restd.crud.UpdateOperation"/>
    <bean name="delete" type="leap.web.api.restd.CrudOperation" class="leap.web.api.restd.crud.DeleteOperation"/>
    <bean name="find"   type="leap.web.api.restd.CrudOperation" class="leap.web.api.restd.crud.FindOperation"/>
    <bean name="query"  type="leap.web.api.restd.CrudOperation" class="leap.web.api.restd.crud.QueryOperation"/>
    <bean name="count"  type="leap.web.api.restd.CrudOperation" class="leap.web.api.restd.crud.CountOperation"/>
    <bean name="replace" type="leap.web.api.restd.CrudOperation" class="leap.web.api.restd.crud.ReplaceOperation"/>

    <bean name="sql"
          type="leap.web.api.restd.RestdOperationProvider"
          class="leap.web.api.restd.sql.SqlOperationProvider"/>

    <!-- dyna -->
    <bean type="leap.web.api.dyna.DynaApiFactory" class="leap.web.api.dyna.DefaultDynaApiFactory" primary="true"/>

	<!-- remote rest entity -->
	<bean type="leap.web.api.remote.ds.RestDatasourceManager"
		class="leap.web.api.remote.ds.DefaultRestDataSourceManager" primary="true"/>
	<bean class="leap.web.api.remote.TokenFetcher" />
    <bean type="leap.web.api.remote.RestResourceFactory"
          class="leap.web.api.remote.DefaultRestResourceFactory" primary="true"/>

</beans>