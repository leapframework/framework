<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.leapframework.org/schema/beans">

    <bean type="leap.core.AppHome" class="leap.core.DefaultAppHome" primary="true"/>
    <bean class="leap.core.AppFileMonitor" primary="true" lazy-init="false"/>
    <bean type="leap.core.i18n.MessageSource" class="leap.core.i18n.ClasspathMessageSource" primary="true"/>
    <bean type="leap.core.i18n.MessageReader" class="leap.core.i18n.XmlMessageReader"/>
    <bean type="leap.core.i18n.MessageReader" class="leap.core.i18n.PropertiesMessageReader"/>
    <bean type="leap.core.i18n.MessageReader" class="leap.core.i18n.YamlMessageReader"/>
    <bean type="leap.core.transaction.TransactionProviderFactory" class="leap.core.transaction.LocalTransactionProviderFactory" primary="true"/>
    <bean type="leap.core.transaction.TransactionManager" class="leap.core.transaction.DefaultTransactionManager" primary="true"/>
    <bean type="leap.core.event.EventManager" class="leap.core.event.DefaultEventManager" primary="true"/>
    <bean type="leap.core.AppContextInitializable" class="leap.core.event.DefaultEventRegister"/>
    <bean type="leap.core.ds.DataSourceManager" class="leap.core.ds.DefaultDataSourceManager" primary="true" lazy-init="false">
        <additional-type-def type="leap.core.ds.management.MDataSourceConfig" primary="true"/>
    </bean>
    <bean type="leap.core.params.ParamsFactory" class="leap.core.params.DefaultParamsFactory" primary="true"/>
    <bean type="leap.core.variable.VariableEnvironment" class="leap.core.variable.DefaultVariableEnvironment" primary="true"/>
    
    <!-- injector -->
    <bean type="leap.core.ioc.BeanInjector" class="leap.core.ioc.ClassesFieldInjector"/>
    
    <!--variable-->
    <bean name="now"               type="leap.core.variable.Variable" class="leap.core.variable.NowVariable"/>
    <bean name="timestamp"         type="leap.core.variable.Variable" class="leap.core.variable.TimestampVariable"/>
    <bean name="currentTimeMillis" type="leap.core.variable.Variable" class="leap.core.variable.CurrentTimeMillisVariable"/>
    <bean name="user"              type="leap.core.variable.Variable" class="leap.core.variable.UserVariable"/>
    <bean name="uuid"              type="leap.core.variable.Variable" class="leap.core.variable.UUIDVariable"/>
    <bean name="short_uuid"        type="leap.core.variable.Variable" class="leap.core.variable.ShortUUIDVariable"/>
    <bean name="short_id"          type="leap.core.variable.Variable" class="leap.core.variable.ShortIDVariable"/>

    <bean type="leap.core.cache.CacheManager" class="leap.core.cache.DefaultCacheManager" primary="true">
        <register-bean-factory target-type="leap.core.cache.Cache"/>
    </bean>

    <bean type="leap.core.schedule.SchedulerManager" class="leap.core.schedule.DefaultSchedulerManager" primary="true"/>

    <!--el-->
    <bean type="leap.core.el.ElConfig" class="leap.core.el.DefaultElConfig" primary="true"/>
    <bean name="spel" type="leap.core.el.ExpressionLanguage" class="leap.core.el.DefaultExpressionLanguage" primary="true"/>

    <!--jdbc-->
    <beans if-class-present="org.apache.tomcat.jdbc.pool.DataSource">
        <bean name="tomcat" type="leap.core.ds.DataSourceFactory" class="leap.core.ds.integration.TomcatDataSourceFactory"/>
    </beans>
    <bean name="jndi" type="leap.core.ds.DataSourceFactory" class="leap.core.ds.JndiDataSourceFactory"/>

    <!-- proxy for all data source(s) -->
    <bean-proxy if="properties['dsm.monitoring'] == true" target-type="javax.sql.DataSource" proxy-class="leap.core.ds.management.MDataSourceProxy"/>

    <!--meta-->
    <bean type="leap.core.meta.MPatternSource" class="leap.core.meta.DefaultMPatternSource" primary="true"/>
    <bean type="leap.core.meta.MTypeManager"   class="leap.core.meta.DefaultMTypeManager"   primary="true"/>

    <!--security-->
    <bean name="standard" type="leap.core.security.crypto.PasswordEncoder" class="leap.core.security.crypto.StandardPasswordEncoder">
        <constructor-arg value="${secret}"/>
    </bean>
    <bean name="bcrypt" type="leap.core.security.crypto.PasswordEncoder" class="leap.core.security.crypto.bcrypt.BCryptPasswordEncoder" primary="true"/>

    <!-- validations -->
    <init class="leap.core.validation.MPropertyConfigurator"/>
    <bean type="leap.core.validation.ValidationManager" class="leap.core.validation.DefaultValidationManager" primary="true"/>
    <bean type="leap.core.validation.BeanValidator" 	class="leap.core.validation.DefaultBeanValidator" primary="true"/>

    <bean type="leap.core.web.path.PathTemplateFactory" class="leap.core.web.path.JerseyPathTemplateFactory" primary="true"/>

    <!-- http client -->
    <beans if-class-present="org.apache.http.impl.conn.PoolingHttpClientConnectionManager">
        <bean type="leap.lang.http.client.HttpClient" class="leap.lang.http.client.apache.ApacheHttpClient" primary="true"/>
    </beans>

    <beans if-class-present="!org.apache.http.impl.conn.PoolingHttpClientConnectionManager">
        <bean type="leap.lang.http.client.HttpClient" class="leap.lang.http.client.JdkHttpClient" primary="true">
            <property name="defaultConnectTimeout" value="${httpClient.defaultConnectTimeout}" default-value="30000"/>
            <property name="defaultReadTimeout"    value="${httpClient.defaultReadTimeout}" default-value="30000"/>
        </bean>
    </beans>

    <!-- jmx -->
    <bean type="leap.lang.jmx.MBeanExporter" class="leap.lang.jmx.SimpleMBeanExporter" primary="true"/>
        <!--<constructor-arg>-->
            <!--<bean class="javax.management.MBeanServer">-->
                <!--<factory class="javax.management.MBeanServerFactory" method="createMBeanServer"/>-->
            <!--</bean>-->
        <!--</constructor-arg>-->
    <!--</bean>-->
    <bean type="leap.core.ioc.BeanProcessor" class="leap.core.jmx.JmxBeanProcessor"/>

    <!--doc-->
    <bean type="leap.core.doc.DocResolver" class="leap.core.doc.DefaultDocResolver" primary="true"/>
</beans>